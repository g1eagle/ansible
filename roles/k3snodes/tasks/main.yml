- name: Check if SSH key's exists
  stat:
    path: ~/.ssh/id_rsa
  register: register_name

- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
  community.crypto.openssh_keypair:
    path: ~/.ssh/id_rsa
  when: not register_name.stat.exists
  
- name: Push Key's to servers.
  ansible.builtin.shell: ssh-copy-id astra@Goddess

- name: Validate the sudoers file before saving
  become: yes
  become_method: sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo   ALL='
    line: '%sudo   ALL=(ALL:ALL) NOPASSWD: ALL '
    validate: /usr/sbin/visudo -cf %s

- name: Fetch k3sup setup
  get_url:
    url: https://get.k3sup.dev
    dest: /usr/local/bin/getk3sup.sh
    mode: 0755
  become: yes
  register: fetchgetk3sup

- name: Install k3sup binary
  when: fetchgetk3sup is succeeded
  command: /usr/local/bin/getk3sup.sh
  become: yes
  register: installk3sup
  
- name: if this file does not exist, let me know, but continue
  debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']
  register: host

- name: if this file does not exist, let me know, but continue
  debug: msg="k3sup join --ip {{ ansible_default_ipv4.address }} --server-ip {{ Goddessipaddy }} --user {{ inventory_hostname }}"

- name: install k3 on nodes.
  become: yes
  become_method: sudo
  ansible.builtin.shell: k3sup join --ip {{ ansible_default_ipv4.address }} --server-ip {{ Goddessipaddy }} --user {{ inventory_hostname }}

- name: Validate the sudoers file before saving
  become: yes
  become_method: sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo   ALL='
    line: '%sudo   ALL=(ALL:ALL) ALL'
    validate: /usr/sbin/visudo -cf %s
    


