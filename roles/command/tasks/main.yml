---
# Command Branch Server tasks. 

- name: 'Update and upgrade apt packages'
  become: yes
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400
- name: 'Install packages'
  become: yes
  apt:
    pkg:
      - python3-pip
      - git
      - openssh-client
      - pass

- name: Check if SSH key's exists
  stat:
    path: ~/.ssh/id_rsa
  register: register_name

- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
  openssh_keypair:
    path: ~/.ssh/id_rsa
  when: not register_name.stat.exists

- name: "Add 192.168.2.200 Goddess if it does not exist"
  become: yes
  become_method: sudo
  tags: example2
  lineinfile:
    path: /etc/hosts
    line: "192.168.2.200 Goddess"
    state: present
    backup: yes
  register: checkect1

- name: "Add 192.168.2.201 Platnium if it does not exist"
  become: yes
  become_method: sudo
  tags: example2
  lineinfile:
    path: /etc/hosts
    line: "192.168.2.201 Platnium"
    state: present
    backup: yes
  register: checkect1

- name: "Add 192.168.2.202 Gold if it does not exist"
  become: yes
  become_method: sudo
  tags: example2
  lineinfile:
    path: /etc/hosts
    line: "192.168.2.202 Gold"
    state: present
    backup: yes
  register: checkect1

- name: "Add 192.168.2.203 Silver if it does not exist"
  become: yes
  become_method: sudo
  tags: example2
  lineinfile:
    path: /etc/hosts
    line: "192.168.2.203 Silver"
    state: present
    backup: yes
  register: checkect1

- name: "Add 192.168.2.204 Copper if it does not exist"
  become: yes
  become_method: sudo
  tags: example2
  lineinfile:
    path: /etc/hosts
    line: "192.168.2.204 Copper"
    state: present
    backup: yes
  register: checkect1

- name: Push Key's to servers.
  ansible.builtin.command: ssh-copy-id astra@Goddess

- name: Push Key's to servers.
  ansible.builtin.command: ssh-copy-id dragon@Platnium
  
- name: Push Key's to servers.
  ansible.builtin.command: ssh-copy-id dragon@Gold

- name: Push Key's to servers.
  ansible.builtin.command: ssh-copy-id dragon@Silver
  
- name: Push Key's to servers.
  ansible.builtin.command: ssh-copy-id dragon@Copper

- name: Validate the sudoers file before saving
  become: yes
  become_method: sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo   ALL='
    line: '%sudo   ALL=(ALL:ALL) NOPASSWD: ALL '
    validate: /usr/sbin/visudo -cf %s

- name: Fetch k3sup setup
  get_url:
    url: https://get.k3sup.dev
    dest: /usr/local/bin/getk3sup.sh
    mode: 0755
  become: yes
  register: fetchgetk3sup

- name: Install k3sup binary
  when: fetchgetk3sup is succeeded
  command: /usr/local/bin/getk3sup.sh
  become: yes
  register: installk3sup
  
- name: run k3up
  become: yes
  become_method: sudo
  ansible.builtin.command: k3sup install --local --no-extras 

- name: Validate the sudoers file before saving
  become: yes
  become_method: sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo   ALL='
    line: '%sudo   ALL=(ALL:ALL) NOPASSWD: ALL '
    validate: /usr/sbin/visudo -cf %s

- name: Give insecure permissions to an existing file
  become: yes
  become_method: sudo
  ansible.builtin.file:
    path: /etc/rancher/k3s/k3s.yaml
    mode: '644'

- name: Confirm metallb install 
  pause:
    prompt: "Are you sure you want to install metallb? (yes/no)"
  register: confirm_delete

- name: Get MetalLB installed p1
  become: yes
  become_method: sudo
  ansible.builtin.command: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/namespace.yaml
  when: confirm_delete.user_input | bool

- name: Get MetalLB installed p2
  become: yes
  become_method: sudo
  ansible.builtin.command: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.9.3/manifests/metallb.yaml
  when: confirm_delete.user_input | bool

- name: Get MetalLB installed p3
  become: yes
  become_method: sudo
  ansible.builtin.command: kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"
  when: confirm_delete.user_input | bool

- name: Install Portainer
  become: yes
  become_method: sudo
  ansible.builtin.command: kubectl apply -n portainer -f https://raw.githubusercontent.com/portainer/k8s/master/deploy/manifests/portainer/portainer.yaml

